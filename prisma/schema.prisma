generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  email            String   @id
  passwordHash     String
  grade            Int?
  favoriteSubject  String?
  mockExamScore    Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  chatSessions     ChatSession[]
  dailyMetrics     DailyStudentMetric[]
  contextDocument  StudentContextDocument?
}

model ChatSession {
  id            String         @id @default(uuid())
  studentEmail  String
  subject       String
  startedAt     DateTime       @default(now())
  endedAt       DateTime?
  sessionNotes  String?

  student       Student        @relation(fields: [studentEmail], references: [email], onDelete: Cascade)
  messages      ChatMessage[]

  @@index([studentEmail, subject])
  @@index([startedAt])
}

model ChatMessage {
  id               BigInt       @id @default(autoincrement())
  sessionId        String
  role             String
  content          String
  tokensEstimated  Int?
  createdAt        DateTime     @default(now())

  session          ChatSession  @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId, createdAt])
  @@index([role])
}

model DailyStudentMetric {
  studentEmail            String
  subject                 String
  summaryDate             DateTime @db.Date
  sessionsCount           Int      @default(0)
  userMessagesCount       Int      @default(0)
  assistantMessagesCount  Int      @default(0)
  totalTokenEstimate      Int      @default(0)
  totalDurationSeconds    Int      @default(0)
  lastCalculatedAt        DateTime @default(now())

  student                 Student  @relation(fields: [studentEmail], references: [email], onDelete: Cascade)

  @@id([studentEmail, subject, summaryDate])
}

model StudentContextDocument {
  studentEmail    String   @id
  content         String
  isAutoGenerated Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  student         Student  @relation(fields: [studentEmail], references: [email], onDelete: Cascade)
}
